<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="matrix_8cpp" kind="file" language="C++">
    <compoundname>matrix.cpp</compoundname>
    <includes refid="matrix_8hpp" local="yes">..\include\matrix.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>..\include\matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/matrix.cpp</label>
        <link refid="matrix_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="matrix_8cpp_1a6ce0bc529fe2ee6fb2d0eb8acbdc1e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;o, Matrix &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Sobrecarga de &lt;&lt; para imprimir matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>Flujo de salida </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Matriz a imprimir </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Referencia al flujo de salida </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matrix.cpp" line="166" column="1" bodyfile="src/matrix.cpp" bodystart="166" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="matrix_8cpp_1a56d60ea1f08402246a7cfd477d69a618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix &amp; zeros</definition>
        <argsstring>(const int n_row, const int n_column)</argsstring>
        <name>zeros</name>
        <param>
          <type>const int</type>
          <declname>n_row</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>n_column</declname>
        </param>
        <briefdescription>
<para>Crea una matriz de ceros. </para>
        </briefdescription>
        <detaileddescription>
<para>Genera una matriz de ceros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matrix.cpp" line="179" column="8" bodyfile="src/matrix.cpp" bodystart="179" bodyend="189"/>
        <referencedby refid="_j_p_l___eph___d_e430_8cpp_1ae897c9f2fcc5ec3b70e2d9eedbdc0d4e" compoundref="_j_p_l___eph___d_e430_8cpp" startline="30" endline="39">_temp</referencedby>
        <referencedby refid="_az_el_pa_8hpp_1ae89a6c135135b96ec7057c45dced4159" compoundref="_az_el_pa_8cpp" startline="40" endline="68">AzElPa</referencedby>
        <referencedby refid="_cheb3_d_8hpp_1a7921d95c36d12377ffe5db715d964162" compoundref="_cheb3_d_8cpp" startline="40" endline="72">Cheb3D</referencedby>
        <referencedby refid="global_8hpp_1af51b221967b797557656923d624cf0db" compoundref="global_8cpp" startline="102" endline="117">DE430Coeff</referencedby>
        <referencedby refid="_d_e_integ_8hpp_1ab72ed115eb278b92a2923e5699a54413" compoundref="_d_e_integ_8cpp" startline="55" endline="716">DEInteg</referencedby>
        <referencedby refid="global_8hpp_1af1504e3e975e6f502042c7fa8b7abe60" compoundref="global_8cpp" startline="35" endline="53">eop19620101</referencedby>
        <referencedby refid="_g___accel_harmonic_8hpp_1a13bfb59270182548cee5eba7c52b2957" compoundref="_g___accel_harmonic_8cpp" startline="41" endline="60">G_AccelHarmonic</referencedby>
        <referencedby refid="global_8hpp_1aaaff2116e89af4f16a9d4ec2a1442db6" compoundref="global_8cpp" startline="69" endline="86">GGM03S</referencedby>
        <referencedby refid="_legendre_8hpp_1a55ce532de3c95506384990ae714dd99d" compoundref="_legendre_8cpp" startline="36" endline="84">Legendre</referencedby>
        <referencedby refid="_position_8hpp_1ad3ff3004edb305ae3aed0230373b848e" compoundref="_position_8cpp" startline="31" endline="47">Position</referencedby>
        <referencedby refid="_r__x_8cpp_1afbf7f6d547a980cb9583543844df12ae" compoundref="_r__x_8cpp" startline="35" endline="46">R_x</referencedby>
        <referencedby refid="_r__y_8hpp_1a25114557991f92fd6b027118c591a98f" compoundref="_r__y_8cpp" startline="29" endline="39">R_y</referencedby>
        <referencedby refid="_r__z_8cpp_1a4f688959a9ab144bf27d272e54bf7258" compoundref="_r__z_8cpp" startline="29" endline="39">R_z</referencedby>
        <referencedby refid="_var_eqn_8hpp_1ac635346ab8c33fade0f3287e9d9b8866" compoundref="_var_eqn_8cpp" startline="38" endline="100">varEqn</referencedby>
      </memberdef>
      <memberdef kind="function" id="matrix_8cpp_1ab2f05195ce5c6c4b6e00df63a50c329d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix &amp; zeros</definition>
        <argsstring>(const int n)</argsstring>
        <name>zeros</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Crea una matriz cuadrada de ceros. </para>
        </briefdescription>
        <detaileddescription>
<para>Genera un vector columna de ceros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matrix.cpp" line="194" column="8" bodyfile="src/matrix.cpp" bodystart="194" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="matrix_8cpp_1a6d5ff1bcc8ce1f0309a47210e1231c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix &amp; eye</definition>
        <argsstring>(const int n)</argsstring>
        <name>eye</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Crea una matriz identidad. </para>
        </briefdescription>
        <detaileddescription>
<para>Genera una matriz identidad. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matrix.cpp" line="290" column="8" bodyfile="src/matrix.cpp" bodystart="290" bodyend="309"/>
        <referencedby refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" compoundref="matrix_8cpp" startline="561" endline="623">Matrix::inv</referencedby>
        <referencedby refid="_meas_update_8hpp_1ae12754392beb1fd53d392978b396266f" compoundref="_meas_update_8cpp" startline="50" endline="63">MeasUpdate</referencedby>
      </memberdef>
      <memberdef kind="function" id="matrix_8cpp_1acbd9778b697f9ad3da64ef53b850e2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix &amp; transpose</definition>
        <argsstring>(Matrix &amp;m)</argsstring>
        <name>transpose</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Devuelve la transpuesta de una matriz. </para>
        </briefdescription>
        <detaileddescription>
<para>Calcula la transpuesta de una matriz. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matrix.cpp" line="314" column="8" bodyfile="src/matrix.cpp" bodystart="314" bodyend="324"/>
        <references refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" compoundref="matrix_8hpp" startline="40">Matrix::n_column</references>
        <references refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" compoundref="matrix_8hpp" startline="39">Matrix::n_row</references>
        <referencedby refid="_accel_8hpp_1a052008f916a6d5da1ba6d8b23e13d933" compoundref="_accel_8cpp" startline="39" endline="94">accel</referencedby>
        <referencedby refid="_accel_harmonic_8hpp_1a97ea72b6a1426f18c34d295e50b8fc4b" compoundref="_accel_harmonic_8cpp" startline="37" endline="96">AccelHarmonic</referencedby>
        <referencedby refid="_d_e_integ_8hpp_1ab72ed115eb278b92a2923e5699a54413" compoundref="_d_e_integ_8cpp" startline="55" endline="716">DEInteg</referencedby>
        <referencedby refid="elements_8hpp_1a5dd6d5680c9b5aafae7e21082e0ab75a" compoundref="elements_8cpp" startline="42" endline="80">elements</referencedby>
        <referencedby refid="_meas_update_8hpp_1ae12754392beb1fd53d392978b396266f" compoundref="_meas_update_8cpp" startline="50" endline="63">MeasUpdate</referencedby>
        <referencedby refid="_time_update_8hpp_1a2532be63504dbae7f3a2a57df6770b13" compoundref="_time_update_8cpp" startline="33" endline="37">TimeUpdate</referencedby>
        <referencedby refid="_var_eqn_8hpp_1ac635346ab8c33fade0f3287e9d9b8866" compoundref="_var_eqn_8cpp" startline="38" endline="100">varEqn</referencedby>
      </memberdef>
      <memberdef kind="function" id="matrix_8cpp_1a2159e44b4d006a55939a41c761708fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix &amp; v_cross</definition>
        <argsstring>(Matrix &amp;v, Matrix &amp;w)</argsstring>
        <name>v_cross</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Producto vectorial entre dos vectores 3D. </para>
        </briefdescription>
        <detaileddescription>
<para>Calcula el producto vectorial entre dos vectores 3D. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matrix.cpp" line="429" column="8" bodyfile="src/matrix.cpp" bodystart="429" bodyend="439"/>
        <references refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" compoundref="matrix_8hpp" startline="40">Matrix::n_column</references>
        <references refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" compoundref="matrix_8hpp" startline="39">Matrix::n_row</references>
        <referencedby refid="elements_8hpp_1a5dd6d5680c9b5aafae7e21082e0ab75a" compoundref="elements_8cpp" startline="42" endline="80">elements</referencedby>
      </memberdef>
      <memberdef kind="function" id="matrix_8cpp_1ab7c29bd668becd2c3be14876cb2ca51a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix &amp; union_vector</definition>
        <argsstring>(Matrix &amp;v1, Matrix &amp;v2)</argsstring>
        <name>union_vector</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Concatena dos vectores. </para>
        </briefdescription>
        <detaileddescription>
<para>Une dos vectores columna en uno solo. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matrix.cpp" line="516" column="8" bodyfile="src/matrix.cpp" bodystart="516" bodyend="536"/>
        <references refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" compoundref="matrix_8hpp" startline="40">Matrix::n_column</references>
        <references refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" compoundref="matrix_8hpp" startline="39">Matrix::n_row</references>
        <referencedby refid="_accel_8hpp_1a052008f916a6d5da1ba6d8b23e13d933" compoundref="_accel_8cpp" startline="39" endline="94">accel</referencedby>
        <referencedby refid="_j_p_l___eph___d_e430_8hpp_1a5e6fedfbbbe0ca32aa62a9016e7d3293" compoundref="_j_p_l___eph___d_e430_8cpp" startline="58" endline="328">JPL_Eph_DE430</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementación de la clase <ref refid="class_matrix" kindref="compound">Matrix</ref> y sus operaciones básicas. </para>
    </briefdescription>
    <detaileddescription>
<para>Esta clase maneja matrices dinámicas con operaciones comunes de álgebra lineal, útiles en aplicaciones científicas donde no se desea depender de librerías externas. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//$Header$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GMAT:<sp/>General<sp/>Mission<sp/>Analysis<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>**Legal**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Juan<sp/>Sánchez<sp/>de<sp/>Corta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_8hpp" kindref="compound">..\include\matrix.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix::Matrix</ref>(){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_matrix_1abe71c89a7bd015e11337cf43a5c36091" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix::Matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_size){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_size<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>create:<sp/>error<sp/>in<sp/>v_size\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>=<sp/>v_size;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>=<sp/>v_size;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**)malloc(v_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>create:<sp/>error<sp/>in<sp/>data\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>v_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(v_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data[i]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>create:<sp/>error<sp/>in<sp/>row<sp/>allocation\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_matrix_1a025f8b6a2384b2b54d6049e49351770c" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix::Matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>create:<sp/>error<sp/>in<sp/>n_row/n_column\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;n_row<sp/>=<sp/><ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;n_column<sp/>=<sp/><ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**)<sp/>malloc(<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>create:<sp/>error<sp/>in<sp/>data\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accesores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_matrix_1a074a3b36a65989b51afbfcb5b0e6f573" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="class_matrix_1a074a3b36a65989b51afbfcb5b0e6f573" kindref="member">Matrix::operator () </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0<sp/>||<sp/>n<sp/>&gt;<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>*this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix:<sp/>error<sp/>in<sp/>row/column\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data[(n<sp/>-<sp/>1)/this-&gt;n_column][(n<sp/>-<sp/>1)%this-&gt;n_column];</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_matrix_1a920e6bd524f318abe55a379190e2a25b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="class_matrix_1a074a3b36a65989b51afbfcb5b0e6f573" kindref="member">Matrix::operator () </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&lt;=<sp/>0<sp/>||<sp/>row<sp/>&gt;<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>||<sp/>column<sp/>&lt;=<sp/>0<sp/>||<sp/>column<sp/>&gt;<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>get:<sp/>error<sp/>in<sp/>row/column\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data[row<sp/>-<sp/>1][column<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operaciones<sp/>básicas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_matrix_1a7cc7127ce96c997c9d14f1f8874ed742" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1a7cc7127ce96c997c9d14f1f8874ed742" kindref="member">Matrix::operator + </ref>(<ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>||<sp/>this-&gt;n_column<sp/>!=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>sum:<sp/>error<sp/>in<sp/>n_row+n_column\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,j)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,j)<sp/>+<sp/>m(i,j);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_matrix_1ac13e11282bf8fb3e88eb4e743c6dc019" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1ac13e11282bf8fb3e88eb4e743c6dc019" kindref="member">Matrix::operator - </ref>(<ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>||<sp/>this-&gt;n_column<sp/>!=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>sub:<sp/>error<sp/>in<sp/>n_row/n_column\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,j)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,j)<sp/>-<sp/>m(i,j);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_matrix_1a6ce0bc529fe2ee6fb2d0eb8acbdc1e92" refkind="member"><highlight class="normal">ostream&amp;<sp/><ref refid="matrix_8cpp_1a6ce0bc529fe2ee6fb2d0eb8acbdc1e92" kindref="member">operator &lt;&lt; </ref>(ostream<sp/>&amp;o,<sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%5.20lf<sp/>&quot;</highlight><highlight class="normal">,<sp/>m(i,j));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="matrix_8hpp_1a56d60ea1f08402246a7cfd477d69a618" refkind="member"><highlight class="normal"><ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="matrix_8cpp_1a56d60ea1f08402246a7cfd477d69a618" kindref="member">zeros</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_column)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref>(n_row,<sp/>n_column);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>n_row;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>n_column;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,j)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*m_aux);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="matrix_8hpp_1ab2f05195ce5c6c4b6e00df63a50c329d" refkind="member"><highlight class="normal"><ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="matrix_8cpp_1a56d60ea1f08402246a7cfd477d69a618" kindref="member">zeros</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;zeros:<sp/>error<sp/>in<sp/>size<sp/>n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref>(n,<sp/>n);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_matrix_1ae1bc7e1fda06dab52353ac01b3196efd" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1ae1bc7e1fda06dab52353ac01b3196efd" kindref="member">Matrix::operator * </ref>(<ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>!=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>product:<sp/>error<sp/>in<sp/>n_row*m_column\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>(*this)(i,<sp/>k)<sp/>*<sp/>m(k,<sp/>j);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_matrix_1afa8805316703c98abf5fefd7788b92ef" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1afa8805316703c98abf5fefd7788b92ef" kindref="member">Matrix::operator / </ref>(<ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;m){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verificar<sp/>que<sp/>las<sp/>dimensiones<sp/>sean<sp/>compatibles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>!=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>||<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>division:<sp/>Incompatible<sp/>dimensions<sp/>or<sp/>divisor<sp/>is<sp/>not<sp/>square\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calcular<sp/>la<sp/>inversa<sp/>de<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/>inv_m<sp/>=<sp/>m.<ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">inv</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiplicar<sp/>(*this)<sp/>por<sp/>inv_m<sp/>(A<sp/>*<sp/>B^{-1})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>(*this)<sp/>*<sp/>inv_m;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="class_matrix_1ade03836bffb81664225dc544b5d5e6db" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1ade03836bffb81664225dc544b5d5e6db" kindref="member">Matrix::operator = </ref>(<ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;m){</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**)<sp/>malloc(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>assignment:<sp/>error<sp/>in<sp/>data<sp/>allocation\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)<sp/>malloc(this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data[i]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>assignment:<sp/>error<sp/>in<sp/>row<sp/>allocation\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data[i][j]<sp/>=<sp/>m.data[i][j];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="matrix_8hpp_1a6d5ff1bcc8ce1f0309a47210e1231c6c" refkind="member"><highlight class="normal"><ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="matrix_8cpp_1a6d5ff1bcc8ce1f0309a47210e1231c6c" kindref="member">eye</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eye:<sp/>error<sp/>in<sp/>size<sp/>n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref>(n,<sp/>n);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="matrix_8hpp_1acbd9778b697f9ad3da64ef53b850e2c9" refkind="member"><highlight class="normal"><ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="matrix_8cpp_1acbd9778b697f9ad3da64ef53b850e2c9" kindref="member">transpose</ref>(<ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref>(m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>,<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(j,<sp/>i)<sp/>=<sp/>m(i,<sp/>j);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="class_matrix_1a939695368e670812f344aaec5718c438" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1a7cc7127ce96c997c9d14f1f8874ed742" kindref="member">Matrix::operator + </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,<sp/>j)<sp/>+<sp/>s;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="class_matrix_1a7e6bdc324aee325e3a02ea82a8e17ac7" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1ac13e11282bf8fb3e88eb4e743c6dc019" kindref="member">Matrix::operator - </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s){</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,<sp/>j)<sp/>-<sp/>s;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="class_matrix_1a04be68a75f92fef4175c6abf281530d8" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1ae1bc7e1fda06dab52353ac01b3196efd" kindref="member">Matrix::operator * </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,<sp/>j)<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="class_matrix_1a859f5cfddc6cd6e208f1c4ff189d258a" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1afa8805316703c98abf5fefd7788b92ef" kindref="member">Matrix::operator / </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s){</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>division:<sp/>division<sp/>by<sp/>zero<sp/>detected\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(i,<sp/>j)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,<sp/>j)<sp/>/<sp/>s;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Métodos<sp/>auxiliares</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="class_matrix_1aa30b90656f5063a7eac84a8cc5607318" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1aa30b90656f5063a7eac84a8cc5607318" kindref="member">Matrix::norm</ref>(){</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>pow((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,<sp/>j),<sp/>2);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(r);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="class_matrix_1ac5e00d2720d9e6431f8998cb52668368" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1ac5e00d2720d9e6431f8998cb52668368" kindref="member">Matrix::dot</ref>(<ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;m){</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>m.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>||<sp/>this-&gt;n_column<sp/>!=<sp/>m.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>dot:<sp/>error<sp/>in<sp/>dimensions\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>(*this)(i,<sp/>j)<sp/>*<sp/>m(i,<sp/>j);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="matrix_8hpp_1a2159e44b4d006a55939a41c761708fb8" refkind="member"><highlight class="normal"><ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="matrix_8cpp_1a2159e44b4d006a55939a41c761708fb8" kindref="member">v_cross</ref>(<ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>&amp;v,<sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>&amp;w){</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>3<sp/>||<sp/>v.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>!=<sp/>1<sp/>||<sp/>w.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>3<sp/>||<sp/>w.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;v_cross:<sp/>vectors<sp/>must<sp/>be<sp/>3x1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref>(3,<sp/>1);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>(*result)(1,<sp/>1)<sp/>=<sp/>v(2,<sp/>1)<sp/>*<sp/>w(3,<sp/>1)<sp/>-<sp/>v(3,<sp/>1)<sp/>*<sp/>w(2,<sp/>1);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>(*result)(2,<sp/>1)<sp/>=<sp/>v(3,<sp/>1)<sp/>*<sp/>w(1,<sp/>1)<sp/>-<sp/>v(1,<sp/>1)<sp/>*<sp/>w(3,<sp/>1);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>(*result)(3,<sp/>1)<sp/>=<sp/>v(1,<sp/>1)<sp/>*<sp/>w(2,<sp/>1)<sp/>-<sp/>v(2,<sp/>1)<sp/>*<sp/>w(1,<sp/>1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="class_matrix_1a056b9a1c08027beffe6c408c8cfdb6e1" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1a056b9a1c08027beffe6c408c8cfdb6e1" kindref="member">Matrix::extract_row</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&lt;=<sp/>0<sp/>||<sp/>row<sp/>&gt;<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;extract_row:<sp/>error<sp/>in<sp/>row<sp/>index\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(1,<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*result)(1,<sp/>j)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(row,<sp/>j);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="class_matrix_1abd244116a45deda4143900e05003ef7e" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1abd244116a45deda4143900e05003ef7e" kindref="member">Matrix::extract_column</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&lt;=<sp/>0<sp/>||<sp/>column<sp/>&gt;<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;extract_column:<sp/>error<sp/>in<sp/>column<sp/>index\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*result)(i,<sp/>1)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,<sp/>column);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_matrix_1a403e2a20dcfc235843aebf3599b87356" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a403e2a20dcfc235843aebf3599b87356" kindref="member">Matrix::assign_row</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&lt;=<sp/>0<sp/>||<sp/>row<sp/>&gt;<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;assign_row:<sp/>error<sp/>in<sp/>row<sp/>index\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>1<sp/>||<sp/>v.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>!=<sp/>this-&gt;n_column)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;assign_row:<sp/>vector<sp/>dimensions<sp/>mismatch\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)(row,<sp/>j)<sp/>=<sp/>v(1,<sp/>j);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="class_matrix_1a82f842045feaabec73cb00d8002a38d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a82f842045feaabec73cb00d8002a38d0" kindref="member">Matrix::assign_column</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column,<sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&lt;=<sp/>0<sp/>||<sp/>column<sp/>&gt;<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;assign_column:<sp/>error<sp/>in<sp/>column<sp/>index\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>this-&gt;n_row<sp/>||<sp/>v.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;assign_column:<sp/>vector<sp/>dimensions<sp/>mismatch\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)(i,<sp/>column)<sp/>=<sp/>v(i,<sp/>1);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="matrix_8hpp_1ab7c29bd668becd2c3be14876cb2ca51a" refkind="member"><highlight class="normal"><ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="matrix_8cpp_1ab7c29bd668becd2c3be14876cb2ca51a" kindref="member">union_vector</ref>(<ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>&amp;v1,<sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>&amp;v2)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v1.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>1<sp/>||<sp/>v2.<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>1){</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>union_vector:<sp/>error<sp/>in<sp/>n_row\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tamano<sp/>=<sp/>v1.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref><sp/>+<sp/>v2.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*m_aux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref>(1,<sp/>tamano);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aux<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>v1.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(1,<sp/>aux)<sp/>=<sp/>(v1)(1,<sp/>i);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux++;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>v2.<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_aux)(1,<sp/>aux)<sp/>=<sp/>v2(1,<sp/>i);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux++;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_aux;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="class_matrix_1a837260f6358853bd4012a86107df466f" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1a837260f6358853bd4012a86107df466f" kindref="member">Matrix::extract_vector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_size<sp/>=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>*<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from<sp/>&lt;=<sp/>0<sp/>||<sp/>from<sp/>&gt;<sp/>total_size<sp/>||<sp/>to<sp/>&lt;<sp/>from<sp/>||<sp/>to<sp/>&gt;<sp/>total_size)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;extract_vector:<sp/>invalid<sp/>range<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>from<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>to<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>to<sp/>-<sp/>from<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(1,<sp/>length);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>from;<sp/>n<sp/>&lt;=<sp/>to;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*result)(1,<sp/>n<sp/>-<sp/>from<sp/>+<sp/>1)<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(n);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" refkind="member"><highlight class="normal"><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>&amp;<sp/><ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">Matrix::inv</ref>()<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verificar<sp/>que<sp/>la<sp/>matriz<sp/>sea<sp/>cuadrada</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref><sp/>!=<sp/>this-&gt;<ref refid="class_matrix_1a72848e6895f6a6b638410be60b25ed7a" kindref="member">n_column</ref>)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>inverse:<sp/>Matrix<sp/>must<sp/>be<sp/>square\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>this-&gt;<ref refid="class_matrix_1a25155ffcead67af4aaab4d78256af86f" kindref="member">n_row</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>*<ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">inv</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref>(n,<sp/>n);<sp/></highlight><highlight class="comment">//<sp/>Matriz<sp/>inversa<sp/>(a<sp/>calcular)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix_1a2dba13c45127354c9f75ef576f49269b" kindref="member">Matrix</ref><sp/>temp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copia<sp/>de<sp/>la<sp/>matriz<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inicializar<sp/>inv<sp/>como<sp/>matriz<sp/>identidad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">inv</ref><sp/>=<sp/><ref refid="matrix_8hpp_1a6d5ff1bcc8ce1f0309a47210e1231c6c" kindref="member">eye</ref>(n);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminación<sp/>Gauss-Jordan<sp/>con<sp/>pivoteo<sp/>parcial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>1;<sp/>col<sp/>&lt;=<sp/>n;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pivoteo<sp/>parcial:<sp/>buscar<sp/>el<sp/>máximo<sp/>en<sp/>la<sp/>columna<sp/>actual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_row<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_val<sp/>=<sp/>abs(temp(col,<sp/>col));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>col<sp/>+<sp/>1;<sp/>row<sp/>&lt;=<sp/>n;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(temp(row,<sp/>col))<sp/>&gt;<sp/>max_val)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_val<sp/>=<sp/>abs(temp(row,<sp/>col));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_row<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Si<sp/>el<sp/>pivote<sp/>es<sp/>cero,<sp/>la<sp/>matriz<sp/>es<sp/>singular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_val<sp/>&lt;<sp/>1e-10)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>inverse:<sp/>Matrix<sp/>is<sp/>singular<sp/>(non-invertible)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intercambiar<sp/>filas<sp/>si<sp/>es<sp/>necesario</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_row<sp/>!=<sp/>col)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(temp(col,<sp/>j),<sp/>temp(max_row,<sp/>j));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap((*<ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">inv</ref>)(col,<sp/>j),<sp/>(*<ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">inv</ref>)(max_row,<sp/>j));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalizar<sp/>la<sp/>fila<sp/>del<sp/>pivote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pivot<sp/>=<sp/>temp(col,<sp/>col);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp(col,<sp/>j)<sp/>/=<sp/>pivot;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*inv)(col,<sp/>j)<sp/>/=<sp/>pivot;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminación<sp/>hacia<sp/>adelante<sp/>y<sp/>atrás</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>1;<sp/>row<sp/>&lt;=<sp/>n;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>!=<sp/>col)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>temp(row,<sp/>col);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp(row,<sp/>j)<sp/>-=<sp/>factor<sp/>*<sp/>temp(col,<sp/>j);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*inv)(row,<sp/>j)<sp/>-=<sp/>factor<sp/>*<sp/>(*<ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">inv</ref>)(col,<sp/>j);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_matrix_1afba97a76536c7394e65d56b7032cbdc4" kindref="member">inv</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/matrix.cpp"/>
  </compounddef>
</doxygen>
