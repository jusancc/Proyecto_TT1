<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="angl_8hpp" kind="file" language="C++">
    <compoundname>angl.hpp</compoundname>
    <includes refid="matrix_8hpp" local="yes">matrix.hpp</includes>
    <includedby refid="angl_8cpp" local="yes">src/angl.cpp</includedby>
    <includedby refid="tests_8cpp" local="yes">tests/tests.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/angl.hpp</label>
        <link refid="angl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/angl.hpp</label>
        <link refid="angl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/angl.cpp</label>
        <link refid="angl_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="angl_8hpp_1af206beb61be4f584306f6fefed44eb90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double angl</definition>
        <argsstring>(Matrix &amp;vec1, Matrix &amp;vec2)</argsstring>
        <name>angl</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
<para>&lt; Clase <ref refid="class_matrix" kindref="compound">Matrix</ref> personalizada para operaciones vectoriales </para>
        </briefdescription>
        <detaileddescription>
<para>Calcula el ángulo entre dos vectores tridimensionales.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec1</parametername>
</parameternamelist>
<parameterdescription>
<para>Primer vector (3x1 o 1x3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec2</parametername>
</parameternamelist>
<parameterdescription>
<para>Segundo vector (3x1 o 1x3). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ángulo entre ambos vectores en radianes.</para>
</simplesect>
&lt; Clase <ref refid="class_matrix" kindref="compound">Matrix</ref> personalizada para operaciones vectoriales</para>
<para>Utiliza el producto escalar para determinar el ángulo entre dos vectores dados. En caso de que uno de los vectores tenga magnitud muy pequeña, se devuelve un valor indefinido (999999.1) como marcador de error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec1</parametername>
</parameternamelist>
<parameterdescription>
<para>Primer vector (3x1 o 1x3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec2</parametername>
</parameternamelist>
<parameterdescription>
<para>Segundo vector (3x1 o 1x3). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ángulo entre <computeroutput>vec1</computeroutput> y <computeroutput>vec2</computeroutput> en radianes. Si no se puede calcular, retorna 999999.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/angl.hpp" line="32" column="8" bodyfile="src/angl.cpp" bodystart="34" bodyend="61" declfile="include/angl.hpp" declline="32" declcolumn="8"/>
        <references refid="class_matrix_1ac5e00d2720d9e6431f8998cb52668368" compoundref="matrix_8cpp" startline="411" endline="424">Matrix::dot</references>
        <references refid="class_matrix_1aa30b90656f5063a7eac84a8cc5607318" compoundref="matrix_8cpp" startline="398" endline="406">Matrix::norm</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Declaración de la función que calcula el ángulo entre dos vectores. </para>
    </briefdescription>
    <detaileddescription>
<para>Esta función devuelve el ángulo (en radianes) entre dos vectores 3D usando el producto escalar y la norma de los vectores. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//$Header$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GMAT:<sp/>General<sp/>Mission<sp/>Analysis<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>**Legal**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Juan<sp/>Sánchez<sp/>de<sp/>Corta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ANGL_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ANGL_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_8hpp" kindref="compound">matrix.hpp</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="angl_8hpp_1af206beb61be4f584306f6fefed44eb90" kindref="member">angl</ref>(<ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/>vec1,<sp/><ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/>vec2);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_ANGL_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/angl.hpp"/>
  </compounddef>
</doxygen>
