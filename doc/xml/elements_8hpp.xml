<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="elements_8hpp" kind="file" language="C++">
    <compoundname>elements.hpp</compoundname>
    <includes refid="matrix_8hpp" local="yes">../include/matrix.hpp</includes>
    <includes refid="_s_a_t___const_8hpp" local="yes">../include/SAT_Const.hpp</includes>
    <includes local="no">cmath</includes>
    <includes local="no">tuple</includes>
    <includedby refid="elements_8cpp" local="yes">src/elements.cpp</includedby>
    <includedby refid="tests_8cpp" local="yes">tests/tests.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>../include/SAT_Const.hpp</label>
        <link refid="_s_a_t___const_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/elements.hpp</label>
        <link refid="elements_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../include/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>tuple</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/elements.hpp</label>
        <link refid="elements_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/elements.cpp</label>
        <link refid="elements_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="elements_8hpp_1a5dd6d5680c9b5aafae7e21082e0ab75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tuple&lt; double, double, double, double, double, double, double &gt;</type>
        <definition>tuple&lt; double, double, double, double, double, double, double &gt; elements</definition>
        <argsstring>(Matrix &amp;y)</argsstring>
        <name>elements</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Calcula los elementos orbitales keplerianos a partir del vector de estado. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector de estado (6x1): posición (x,y,z) y velocidad (vx,vy,vz). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple&lt;double, double, double, double, double, double, double&gt; con: p (semilatus rectum), a (semi-eje mayor), e (excentricidad), i (inclinación), Omega (longitud nodo ascendente), omega (argumento del periastro), M (anomalía media).</para>
</simplesect>
Esta función toma como entrada un vector de estado compuesto por posición y velocidad y devuelve una tupla con los elementos keplerianos: semilatus rectum, semi-eje mayor, excentricidad, inclinación, longitud del nodo ascendente, argumento del periastro y anomalía media.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector de estado (6x1): posición (x,y,z) y velocidad (vx,vy,vz) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple&lt;double, double, double, double, double, double, double&gt; con:<itemizedlist>
<listitem><para>p: semilatus rectum</para>
</listitem><listitem><para>a: semi-eje mayor</para>
</listitem><listitem><para>e: excentricidad</para>
</listitem><listitem><para>i: inclinación</para>
</listitem><listitem><para>Omega: longitud del nodo ascendente</para>
</listitem><listitem><para>omega: argumento del periastro</para>
</listitem><listitem><para>M: anomalía media </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/elements.hpp" line="41" column="7" bodyfile="src/elements.cpp" bodystart="42" bodyend="80" declfile="include/elements.hpp" declline="41" declcolumn="7"/>
        <references refid="class_matrix_1ac5e00d2720d9e6431f8998cb52668368" compoundref="matrix_8cpp" startline="411" endline="424">Matrix::dot</references>
        <references refid="class_matrix_1a837260f6358853bd4012a86107df466f" compoundref="matrix_8cpp" startline="541" endline="556">Matrix::extract_vector</references>
        <references refid="class_s_a_t___const_1aa561286ef1a10f479fee20edb32faa16" compoundref="_s_a_t___const_8hpp" startline="62">SAT_Const::GM_Earth</references>
        <references refid="class_matrix_1aa30b90656f5063a7eac84a8cc5607318" compoundref="matrix_8cpp" startline="398" endline="406">Matrix::norm</references>
        <references refid="class_s_a_t___const_1a7322cb29af30ac8df9f46c9dde418381" compoundref="_s_a_t___const_8hpp" startline="35">SAT_Const::pi</references>
        <references refid="matrix_8hpp_1acbd9778b697f9ad3da64ef53b850e2c9" compoundref="matrix_8cpp" startline="314" endline="324">transpose</references>
        <references refid="matrix_8hpp_1a2159e44b4d006a55939a41c761708fb8" compoundref="matrix_8cpp" startline="429" endline="439">v_cross</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Declaración de la función que calcula elementos orbitales keplerianos a partir del vector de estado (posición y velocidad). </para>
    </briefdescription>
    <detaileddescription>
<para>Esta cabecera define la interfaz de la función <computeroutput>elements</computeroutput>, que recibe un vector de estado y devuelve una tupla con los elementos keplerianos: p, a, e, i, Omega, omega, M. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//$Header$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GMAT:<sp/>General<sp/>Mission<sp/>Analysis<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>**Legal**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Juan<sp/>Sánchez<sp/>de<sp/>Corta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ELEMENTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ELEMENTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_8hpp" kindref="compound">../include/matrix.hpp</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_a_t___const_8hpp" kindref="compound">../include/SAT_Const.hpp</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">tuple&lt;double,<sp/>double,<sp/>double,<sp/>double,<sp/>double,<sp/>double,<sp/>double&gt;<sp/><ref refid="elements_8hpp_1a5dd6d5680c9b5aafae7e21082e0ab75a" kindref="member">elements</ref>(<ref refid="class_matrix" kindref="compound">Matrix</ref>&amp;<sp/>y);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_ELEMENTS_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/elements.hpp"/>
  </compounddef>
</doxygen>
